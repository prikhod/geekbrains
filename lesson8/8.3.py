#  Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь
# сам не остановит работу скрипта, введя, например, команду “stop”. При этом скрипт завершается,
# сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить
# соответствующее сообщение. При этом работа скрипта не должна завершаться.

class NotIntErrorUser(Exception):
    def __init__(self, text_error):
        self.text_error = text_error




def main():
    data_list = []
    el = ''
    while True:
        el = input('Введите число для добавления в список')
        if el == 'stop':
            break
        try:
            if not el.isdigit():
                raise NotIntErrorUser('Введено не число')
        except NotIntErrorUser as err:
            print(err)
        else:
            data_list.append(el)
    print(data_list)


if __name__ == '__main__':
    main()
